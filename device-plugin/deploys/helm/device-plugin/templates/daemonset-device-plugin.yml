# Copyright 2024 Cambricon, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

{{- if .Values.devicePlugin.enabled }}
---
{{- $daemonsetName := printf "%s" (include "device-plugin.fullname" .) | trunc 63 | trimSuffix "-" }}
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: {{ $daemonsetName }}
  namespace: {{ include "device-plugin.namespace" . }}
  labels:
    {{- include "device-plugin.labels" . | nindent 4 }}
spec:
  selector:
    matchLabels:
      {{- include "device-plugin.selectorLabels" . | nindent 6 }}
  {{- with .Values.updateStrategy }}
  updateStrategy:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  template:
    metadata:
      labels:
        {{- include "device-plugin.templateLabels" . | nindent 8 }}
      {{- with .Values.podAnnotations }}
      annotations:
        {{- include "mlu-exporter.podAnnotations" (dict "local" . "root" .) | nindent 8 }}
      {{- end }}
    spec:
      {{- if .Values.priorityClassName }}
      priorityClassName: {{ .Values.priorityClassName }}
      {{- end }}
      {{- if .Values.runtimeClassName }}
      runtimeClassName: {{ .Values.runtimeClassName }}
      {{- end }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.securityContext }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "device-plugin.name" . }}
      containers:
      - image: {{ include "device-plugin.fullimage" . }}
        name: {{ include "device-plugin.name" . }}-ctr
        command:
        - /usr/bin/k8s-device-plugin
        {{- with .Values.args }}
        args:
          {{- toYaml . | nindent 8 }}
        {{- end }}
        {{- with .Values.livenessProbe }}
        livenessProbe:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        env:
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: "spec.nodeName"
        {{- with .Values.volumeMounts }}
        volumeMounts:
          {{- toYaml . | nindent 8 }}
        {{- end }}
        securityContext:
          {{- include "device-plugin.securityContext" . | nindent 10 }}
      hostPID: true
      hostIPC: true
      {{- with .Values.volumes }}
      volumes:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}
